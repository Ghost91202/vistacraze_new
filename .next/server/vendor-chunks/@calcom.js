"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@calcom";
exports.ids = ["vendor-chunks/@calcom"];
exports.modules = {

/***/ "(ssr)/./node_modules/@calcom/embed-react/dist/Cal.es.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@calcom/embed-react/dist/Cal.es.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ hr),\n/* harmony export */   getCalApi: () => (/* binding */ Er)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n\nconst fr = \"https://app.cal.com/embed/embed.js\";\nfunction X(C = fr) {\n  (function(g, m, y) {\n    let p = function(u, d) {\n      u.q.push(d);\n    }, R = g.document;\n    g.Cal = g.Cal || function() {\n      let u = g.Cal, d = arguments;\n      if (u.loaded || (u.ns = {}, u.q = u.q || [], R.head.appendChild(R.createElement(\"script\")).src = m, u.loaded = !0), d[0] === y) {\n        const l = function() {\n          p(l, arguments);\n        }, b = d[1];\n        l.q = l.q || [], typeof b == \"string\" ? (u.ns[b] = u.ns[b] || l, p(u.ns[b], d), p(u, [\"initNamespace\", b])) : p(u, d);\n        return;\n      }\n      p(u, d);\n    };\n  })(\n    window,\n    //! Replace it with \"https://cal.com/embed.js\" or the URL where you have embed.js installed\n    C,\n    \"init\"\n  );\n  /*!  Copying ends here. */\n  return window.Cal;\n}\nX.toString();\nfunction cr(C) {\n  const [g, m] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    m(() => X(C));\n  }, []), g;\n}\nvar H = { exports: {} }, A = {};\n/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar Te;\nfunction dr() {\n  if (Te)\n    return A;\n  Te = 1;\n  var C = react__WEBPACK_IMPORTED_MODULE_0__, g = Symbol.for(\"react.element\"), m = Symbol.for(\"react.fragment\"), y = Object.prototype.hasOwnProperty, p = C.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, R = { key: !0, ref: !0, __self: !0, __source: !0 };\n  function u(d, l, b) {\n    var f, _ = {}, w = null, $ = null;\n    b !== void 0 && (w = \"\" + b), l.key !== void 0 && (w = \"\" + l.key), l.ref !== void 0 && ($ = l.ref);\n    for (f in l)\n      y.call(l, f) && !R.hasOwnProperty(f) && (_[f] = l[f]);\n    if (d && d.defaultProps)\n      for (f in l = d.defaultProps, l)\n        _[f] === void 0 && (_[f] = l[f]);\n    return { $$typeof: g, type: d, key: w, ref: $, props: _, _owner: p.current };\n  }\n  return A.Fragment = m, A.jsx = u, A.jsxs = u, A;\n}\nvar I = {};\n/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar we;\nfunction vr() {\n  return we || (we = 1,  true && function() {\n    var C = react__WEBPACK_IMPORTED_MODULE_0__, g = Symbol.for(\"react.element\"), m = Symbol.for(\"react.portal\"), y = Symbol.for(\"react.fragment\"), p = Symbol.for(\"react.strict_mode\"), R = Symbol.for(\"react.profiler\"), u = Symbol.for(\"react.provider\"), d = Symbol.for(\"react.context\"), l = Symbol.for(\"react.forward_ref\"), b = Symbol.for(\"react.suspense\"), f = Symbol.for(\"react.suspense_list\"), _ = Symbol.for(\"react.memo\"), w = Symbol.for(\"react.lazy\"), $ = Symbol.for(\"react.offscreen\"), Z = Symbol.iterator, Pe = \"@@iterator\";\n    function xe(e) {\n      if (e === null || typeof e != \"object\")\n        return null;\n      var r = Z && e[Z] || e[Pe];\n      return typeof r == \"function\" ? r : null;\n    }\n    var x = C.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n    function h(e) {\n      {\n        for (var r = arguments.length, t = new Array(r > 1 ? r - 1 : 0), n = 1; n < r; n++)\n          t[n - 1] = arguments[n];\n        je(\"error\", e, t);\n      }\n    }\n    function je(e, r, t) {\n      {\n        var n = x.ReactDebugCurrentFrame, o = n.getStackAddendum();\n        o !== \"\" && (r += \"%s\", t = t.concat([o]));\n        var s = t.map(function(i) {\n          return String(i);\n        });\n        s.unshift(\"Warning: \" + r), Function.prototype.apply.call(console[e], console, s);\n      }\n    }\n    var ke = !1, De = !1, Fe = !1, Ae = !1, Ie = !1, Q;\n    Q = Symbol.for(\"react.module.reference\");\n    function $e(e) {\n      return !!(typeof e == \"string\" || typeof e == \"function\" || e === y || e === R || Ie || e === p || e === b || e === f || Ae || e === $ || ke || De || Fe || typeof e == \"object\" && e !== null && (e.$$typeof === w || e.$$typeof === _ || e.$$typeof === u || e.$$typeof === d || e.$$typeof === l || // This needs to include all possible module reference object\n      // types supported by any Flight configuration anywhere since\n      // we don't know which Flight build this will end up being used\n      // with.\n      e.$$typeof === Q || e.getModuleId !== void 0));\n    }\n    function We(e, r, t) {\n      var n = e.displayName;\n      if (n)\n        return n;\n      var o = r.displayName || r.name || \"\";\n      return o !== \"\" ? t + \"(\" + o + \")\" : t;\n    }\n    function ee(e) {\n      return e.displayName || \"Context\";\n    }\n    function O(e) {\n      if (e == null)\n        return null;\n      if (typeof e.tag == \"number\" && h(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"), typeof e == \"function\")\n        return e.displayName || e.name || null;\n      if (typeof e == \"string\")\n        return e;\n      switch (e) {\n        case y:\n          return \"Fragment\";\n        case m:\n          return \"Portal\";\n        case R:\n          return \"Profiler\";\n        case p:\n          return \"StrictMode\";\n        case b:\n          return \"Suspense\";\n        case f:\n          return \"SuspenseList\";\n      }\n      if (typeof e == \"object\")\n        switch (e.$$typeof) {\n          case d:\n            var r = e;\n            return ee(r) + \".Consumer\";\n          case u:\n            var t = e;\n            return ee(t._context) + \".Provider\";\n          case l:\n            return We(e, e.render, \"ForwardRef\");\n          case _:\n            var n = e.displayName || null;\n            return n !== null ? n : O(e.type) || \"Memo\";\n          case w: {\n            var o = e, s = o._payload, i = o._init;\n            try {\n              return O(i(s));\n            } catch {\n              return null;\n            }\n          }\n        }\n      return null;\n    }\n    var P = Object.assign, D = 0, re, te, ne, ae, ie, oe, ue;\n    function se() {\n    }\n    se.__reactDisabledLog = !0;\n    function Ye() {\n      {\n        if (D === 0) {\n          re = console.log, te = console.info, ne = console.warn, ae = console.error, ie = console.group, oe = console.groupCollapsed, ue = console.groupEnd;\n          var e = {\n            configurable: !0,\n            enumerable: !0,\n            value: se,\n            writable: !0\n          };\n          Object.defineProperties(console, {\n            info: e,\n            log: e,\n            warn: e,\n            error: e,\n            group: e,\n            groupCollapsed: e,\n            groupEnd: e\n          });\n        }\n        D++;\n      }\n    }\n    function Le() {\n      {\n        if (D--, D === 0) {\n          var e = {\n            configurable: !0,\n            enumerable: !0,\n            writable: !0\n          };\n          Object.defineProperties(console, {\n            log: P({}, e, {\n              value: re\n            }),\n            info: P({}, e, {\n              value: te\n            }),\n            warn: P({}, e, {\n              value: ne\n            }),\n            error: P({}, e, {\n              value: ae\n            }),\n            group: P({}, e, {\n              value: ie\n            }),\n            groupCollapsed: P({}, e, {\n              value: oe\n            }),\n            groupEnd: P({}, e, {\n              value: ue\n            })\n          });\n        }\n        D < 0 && h(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\");\n      }\n    }\n    var V = x.ReactCurrentDispatcher, M;\n    function W(e, r, t) {\n      {\n        if (M === void 0)\n          try {\n            throw Error();\n          } catch (o) {\n            var n = o.stack.trim().match(/\\n( *(at )?)/);\n            M = n && n[1] || \"\";\n          }\n        return `\n` + M + e;\n      }\n    }\n    var q = !1, Y;\n    {\n      var Ne = typeof WeakMap == \"function\" ? WeakMap : Map;\n      Y = new Ne();\n    }\n    function le(e, r) {\n      if (!e || q)\n        return \"\";\n      {\n        var t = Y.get(e);\n        if (t !== void 0)\n          return t;\n      }\n      var n;\n      q = !0;\n      var o = Error.prepareStackTrace;\n      Error.prepareStackTrace = void 0;\n      var s;\n      s = V.current, V.current = null, Ye();\n      try {\n        if (r) {\n          var i = function() {\n            throw Error();\n          };\n          if (Object.defineProperty(i.prototype, \"props\", {\n            set: function() {\n              throw Error();\n            }\n          }), typeof Reflect == \"object\" && Reflect.construct) {\n            try {\n              Reflect.construct(i, []);\n            } catch (S) {\n              n = S;\n            }\n            Reflect.construct(e, [], i);\n          } else {\n            try {\n              i.call();\n            } catch (S) {\n              n = S;\n            }\n            e.call(i.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (S) {\n            n = S;\n          }\n          e();\n        }\n      } catch (S) {\n        if (S && n && typeof S.stack == \"string\") {\n          for (var a = S.stack.split(`\n`), E = n.stack.split(`\n`), c = a.length - 1, v = E.length - 1; c >= 1 && v >= 0 && a[c] !== E[v]; )\n            v--;\n          for (; c >= 1 && v >= 0; c--, v--)\n            if (a[c] !== E[v]) {\n              if (c !== 1 || v !== 1)\n                do\n                  if (c--, v--, v < 0 || a[c] !== E[v]) {\n                    var T = `\n` + a[c].replace(\" at new \", \" at \");\n                    return e.displayName && T.includes(\"<anonymous>\") && (T = T.replace(\"<anonymous>\", e.displayName)), typeof e == \"function\" && Y.set(e, T), T;\n                  }\n                while (c >= 1 && v >= 0);\n              break;\n            }\n        }\n      } finally {\n        q = !1, V.current = s, Le(), Error.prepareStackTrace = o;\n      }\n      var k = e ? e.displayName || e.name : \"\", _e = k ? W(k) : \"\";\n      return typeof e == \"function\" && Y.set(e, _e), _e;\n    }\n    function Ue(e, r, t) {\n      return le(e, !1);\n    }\n    function Ve(e) {\n      var r = e.prototype;\n      return !!(r && r.isReactComponent);\n    }\n    function L(e, r, t) {\n      if (e == null)\n        return \"\";\n      if (typeof e == \"function\")\n        return le(e, Ve(e));\n      if (typeof e == \"string\")\n        return W(e);\n      switch (e) {\n        case b:\n          return W(\"Suspense\");\n        case f:\n          return W(\"SuspenseList\");\n      }\n      if (typeof e == \"object\")\n        switch (e.$$typeof) {\n          case l:\n            return Ue(e.render);\n          case _:\n            return L(e.type, r, t);\n          case w: {\n            var n = e, o = n._payload, s = n._init;\n            try {\n              return L(s(o), r, t);\n            } catch {\n            }\n          }\n        }\n      return \"\";\n    }\n    var N = Object.prototype.hasOwnProperty, fe = {}, ce = x.ReactDebugCurrentFrame;\n    function U(e) {\n      if (e) {\n        var r = e._owner, t = L(e.type, e._source, r ? r.type : null);\n        ce.setExtraStackFrame(t);\n      } else\n        ce.setExtraStackFrame(null);\n    }\n    function Me(e, r, t, n, o) {\n      {\n        var s = Function.call.bind(N);\n        for (var i in e)\n          if (s(e, i)) {\n            var a = void 0;\n            try {\n              if (typeof e[i] != \"function\") {\n                var E = Error((n || \"React class\") + \": \" + t + \" type `\" + i + \"` is invalid; it must be a function, usually from the `prop-types` package, but received `\" + typeof e[i] + \"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");\n                throw E.name = \"Invariant Violation\", E;\n              }\n              a = e[i](r, i, n, t, null, \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\");\n            } catch (c) {\n              a = c;\n            }\n            a && !(a instanceof Error) && (U(o), h(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\", n || \"React class\", t, i, typeof a), U(null)), a instanceof Error && !(a.message in fe) && (fe[a.message] = !0, U(o), h(\"Failed %s type: %s\", t, a.message), U(null));\n          }\n      }\n    }\n    var qe = Array.isArray;\n    function B(e) {\n      return qe(e);\n    }\n    function Be(e) {\n      {\n        var r = typeof Symbol == \"function\" && Symbol.toStringTag, t = r && e[Symbol.toStringTag] || e.constructor.name || \"Object\";\n        return t;\n      }\n    }\n    function Je(e) {\n      try {\n        return de(e), !1;\n      } catch {\n        return !0;\n      }\n    }\n    function de(e) {\n      return \"\" + e;\n    }\n    function ve(e) {\n      if (Je(e))\n        return h(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\", Be(e)), de(e);\n    }\n    var F = x.ReactCurrentOwner, Ge = {\n      key: !0,\n      ref: !0,\n      __self: !0,\n      __source: !0\n    }, pe, ge, J;\n    J = {};\n    function ze(e) {\n      if (N.call(e, \"ref\")) {\n        var r = Object.getOwnPropertyDescriptor(e, \"ref\").get;\n        if (r && r.isReactWarning)\n          return !1;\n      }\n      return e.ref !== void 0;\n    }\n    function Ke(e) {\n      if (N.call(e, \"key\")) {\n        var r = Object.getOwnPropertyDescriptor(e, \"key\").get;\n        if (r && r.isReactWarning)\n          return !1;\n      }\n      return e.key !== void 0;\n    }\n    function He(e, r) {\n      if (typeof e.ref == \"string\" && F.current && r && F.current.stateNode !== r) {\n        var t = O(F.current.type);\n        J[t] || (h('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', O(F.current.type), e.ref), J[t] = !0);\n      }\n    }\n    function Xe(e, r) {\n      {\n        var t = function() {\n          pe || (pe = !0, h(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\", r));\n        };\n        t.isReactWarning = !0, Object.defineProperty(e, \"key\", {\n          get: t,\n          configurable: !0\n        });\n      }\n    }\n    function Ze(e, r) {\n      {\n        var t = function() {\n          ge || (ge = !0, h(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\", r));\n        };\n        t.isReactWarning = !0, Object.defineProperty(e, \"ref\", {\n          get: t,\n          configurable: !0\n        });\n      }\n    }\n    var Qe = function(e, r, t, n, o, s, i) {\n      var a = {\n        // This tag allows us to uniquely identify this as a React Element\n        $$typeof: g,\n        // Built-in properties that belong on the element\n        type: e,\n        key: r,\n        ref: t,\n        props: i,\n        // Record the component responsible for creating this element.\n        _owner: s\n      };\n      return a._store = {}, Object.defineProperty(a._store, \"validated\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: !1\n      }), Object.defineProperty(a, \"_self\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !1,\n        value: n\n      }), Object.defineProperty(a, \"_source\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !1,\n        value: o\n      }), Object.freeze && (Object.freeze(a.props), Object.freeze(a)), a;\n    };\n    function er(e, r, t, n, o) {\n      {\n        var s, i = {}, a = null, E = null;\n        t !== void 0 && (ve(t), a = \"\" + t), Ke(r) && (ve(r.key), a = \"\" + r.key), ze(r) && (E = r.ref, He(r, o));\n        for (s in r)\n          N.call(r, s) && !Ge.hasOwnProperty(s) && (i[s] = r[s]);\n        if (e && e.defaultProps) {\n          var c = e.defaultProps;\n          for (s in c)\n            i[s] === void 0 && (i[s] = c[s]);\n        }\n        if (a || E) {\n          var v = typeof e == \"function\" ? e.displayName || e.name || \"Unknown\" : e;\n          a && Xe(i, v), E && Ze(i, v);\n        }\n        return Qe(e, a, E, o, n, F.current, i);\n      }\n    }\n    var G = x.ReactCurrentOwner, me = x.ReactDebugCurrentFrame;\n    function j(e) {\n      if (e) {\n        var r = e._owner, t = L(e.type, e._source, r ? r.type : null);\n        me.setExtraStackFrame(t);\n      } else\n        me.setExtraStackFrame(null);\n    }\n    var z;\n    z = !1;\n    function K(e) {\n      return typeof e == \"object\" && e !== null && e.$$typeof === g;\n    }\n    function be() {\n      {\n        if (G.current) {\n          var e = O(G.current.type);\n          if (e)\n            return `\n\nCheck the render method of \\`` + e + \"`.\";\n        }\n        return \"\";\n      }\n    }\n    function rr(e) {\n      {\n        if (e !== void 0) {\n          var r = e.fileName.replace(/^.*[\\\\\\/]/, \"\"), t = e.lineNumber;\n          return `\n\nCheck your code at ` + r + \":\" + t + \".\";\n        }\n        return \"\";\n      }\n    }\n    var he = {};\n    function tr(e) {\n      {\n        var r = be();\n        if (!r) {\n          var t = typeof e == \"string\" ? e : e.displayName || e.name;\n          t && (r = `\n\nCheck the top-level render call using <` + t + \">.\");\n        }\n        return r;\n      }\n    }\n    function Ee(e, r) {\n      {\n        if (!e._store || e._store.validated || e.key != null)\n          return;\n        e._store.validated = !0;\n        var t = tr(r);\n        if (he[t])\n          return;\n        he[t] = !0;\n        var n = \"\";\n        e && e._owner && e._owner !== G.current && (n = \" It was passed a child from \" + O(e._owner.type) + \".\"), j(e), h('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', t, n), j(null);\n      }\n    }\n    function ye(e, r) {\n      {\n        if (typeof e != \"object\")\n          return;\n        if (B(e))\n          for (var t = 0; t < e.length; t++) {\n            var n = e[t];\n            K(n) && Ee(n, r);\n          }\n        else if (K(e))\n          e._store && (e._store.validated = !0);\n        else if (e) {\n          var o = xe(e);\n          if (typeof o == \"function\" && o !== e.entries)\n            for (var s = o.call(e), i; !(i = s.next()).done; )\n              K(i.value) && Ee(i.value, r);\n        }\n      }\n    }\n    function nr(e) {\n      {\n        var r = e.type;\n        if (r == null || typeof r == \"string\")\n          return;\n        var t;\n        if (typeof r == \"function\")\n          t = r.propTypes;\n        else if (typeof r == \"object\" && (r.$$typeof === l || // Note: Memo only checks outer props here.\n        // Inner props are checked in the reconciler.\n        r.$$typeof === _))\n          t = r.propTypes;\n        else\n          return;\n        if (t) {\n          var n = O(r);\n          Me(t, e.props, \"prop\", n, e);\n        } else if (r.PropTypes !== void 0 && !z) {\n          z = !0;\n          var o = O(r);\n          h(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", o || \"Unknown\");\n        }\n        typeof r.getDefaultProps == \"function\" && !r.getDefaultProps.isReactClassApproved && h(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\");\n      }\n    }\n    function ar(e) {\n      {\n        for (var r = Object.keys(e.props), t = 0; t < r.length; t++) {\n          var n = r[t];\n          if (n !== \"children\" && n !== \"key\") {\n            j(e), h(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\", n), j(null);\n            break;\n          }\n        }\n        e.ref !== null && (j(e), h(\"Invalid attribute `ref` supplied to `React.Fragment`.\"), j(null));\n      }\n    }\n    function Re(e, r, t, n, o, s) {\n      {\n        var i = $e(e);\n        if (!i) {\n          var a = \"\";\n          (e === void 0 || typeof e == \"object\" && e !== null && Object.keys(e).length === 0) && (a += \" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\");\n          var E = rr(o);\n          E ? a += E : a += be();\n          var c;\n          e === null ? c = \"null\" : B(e) ? c = \"array\" : e !== void 0 && e.$$typeof === g ? (c = \"<\" + (O(e.type) || \"Unknown\") + \" />\", a = \" Did you accidentally export a JSX literal instead of a component?\") : c = typeof e, h(\"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\", c, a);\n        }\n        var v = er(e, r, t, o, s);\n        if (v == null)\n          return v;\n        if (i) {\n          var T = r.children;\n          if (T !== void 0)\n            if (n)\n              if (B(T)) {\n                for (var k = 0; k < T.length; k++)\n                  ye(T[k], e);\n                Object.freeze && Object.freeze(T);\n              } else\n                h(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");\n            else\n              ye(T, e);\n        }\n        return e === y ? ar(v) : nr(v), v;\n      }\n    }\n    function ir(e, r, t) {\n      return Re(e, r, t, !0);\n    }\n    function or(e, r, t) {\n      return Re(e, r, t, !1);\n    }\n    var ur = or, sr = ir;\n    I.Fragment = y, I.jsx = ur, I.jsxs = sr;\n  }()), I;\n}\n false ? 0 : H.exports = vr();\nvar pr = H.exports;\nconst gr = pr.jsx, mr = function(g) {\n  const {\n    calLink: m,\n    calOrigin: y,\n    namespace: p = \"\",\n    config: R,\n    initConfig: u = {},\n    embedJsUrl: d,\n    ...l\n  } = g;\n  if (!m)\n    throw new Error(\"calLink is required\");\n  const b = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(!1), f = cr(d), _ = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (!f || b.current || !_.current)\n      return;\n    b.current = !0;\n    const w = _.current;\n    p ? (f(\"init\", p, {\n      ...u,\n      origin: y\n    }), f.ns[p](\"inline\", {\n      elementOrSelector: w,\n      calLink: m,\n      config: R\n    })) : (f(\"init\", {\n      ...u,\n      origin: y\n    }), f(\"inline\", {\n      elementOrSelector: w,\n      calLink: m,\n      config: R\n    }));\n  }, [f, m, R, p, y, u]), f ? /* @__PURE__ */ gr(\"div\", {\n    ref: _,\n    ...l\n  }) : null;\n}, hr = mr;\nfunction Er(C) {\n  const g = typeof C == \"string\" ? { embedJsUrl: C } : C ?? {}, { namespace: m = \"\", embedJsUrl: y } = g;\n  return new Promise(function p(R) {\n    const u = X(y);\n    u(\"init\", m);\n    const d = m ? u.ns[m] : u;\n    if (!d) {\n      setTimeout(() => {\n        p(R);\n      }, 50);\n      return;\n    }\n    R(d);\n  });\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@calcom/embed-react/dist/Cal.es.mjs\n");

/***/ })

};
;